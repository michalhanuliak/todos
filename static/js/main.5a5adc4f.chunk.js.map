{"version":3,"sources":["reducers/tasks.js","reducers/filter.js","reducers/index.js","components/TasksFilter.js","actions/filter.js","actions/tasks.js","components/NewTask.js","components/TasksActions.js","components/Task.js","components/TasksList.js","containers/App.js","index.js"],"names":["DEFAULT_STATE","isLoading","tasks","state","type","payload","filter","combinedReducers","combineReducers","filterStatus","store","createStore","applyMiddleware","thunk","classes","BEMHelper","name","TasksFilter","dispatch","useDispatch","onChange","e","target","value","id","htmlFor","deleteTask","getState","axios","delete","catch","err","alert","task","changeTaskStatus","targetTaskIndex","findIndex","statusUrl","completed","post","map","NewTask","useState","newTaskName","setNewTaskName","onSubmit","description","preventDefault","body","text","then","response","data","className","TasksActions","useSelector","completedCount","length","onClick","forEach","Task","props","taskInfo","isEditable","setEditable","newText","setNewText","checked","hidden","readOnly","onDoubleClick","classList","add","setSelectionRange","onInput","onKeyDown","key","removeFocus","blur","remove","updatedTasks","updateTask","TasksList","useEffect","get","reduce","result","concat","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a5adc4f.chunk.js","sourcesContent":["const DEFAULT_STATE = {\r\n    isLoading: true,\r\n    tasks: []\r\n}\r\n\r\nconst tasks = (state = DEFAULT_STATE, { type, payload }) => {\r\n    switch (type) {\r\n        case \"START_FETCHING\":\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case \"GET_TASKS\":\r\n            return {\r\n                isLoading: false,\r\n                tasks: payload\r\n            }\r\n        case \"CREATE_TASK\":\r\n            return {\r\n                isLoading: false,\r\n                tasks: payload\r\n            }\r\n        case \"UPDATE_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: payload\r\n            }\r\n        case \"DELETE_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: payload\r\n            }\r\n        case \"CHANGE_TASK_STATUS\":\r\n            return {\r\n                ...state,\r\n                tasks: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default tasks","const filter = (state = \"\", { type, payload }) => {\r\n    switch (type) {\r\n        case \"SET_FILTER_STATUS\":\r\n            return payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default filter","import { createStore, applyMiddleware, combineReducers } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport tasks from './tasks'\r\nimport filterStatus from './filter'\r\n\r\n\r\nconst combinedReducers = combineReducers({\r\n    tasks,\r\n    filterStatus\r\n})\r\n\r\nconst store = createStore(combinedReducers, applyMiddleware(thunk))\r\nexport default store","import React from \"react\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport BEMHelper from \"react-bem-helper\"\r\n\r\nimport {setFilterStatus} from \"../actions/filter\"\r\nimport \"./TasksFilter.scss\"\r\n\r\nvar classes = new BEMHelper({\r\n    name: \"filter\"\r\n})\r\n\r\nconst TasksFilter = () => {\r\n    const dispatch = useDispatch()\r\n    \r\n    return (\r\n        <div \r\n            {...classes()} \r\n            onChange={(e) => dispatch(setFilterStatus(e.target.value))}\r\n        >\r\n            <input {...classes(\"input\")} id=\"all\" type=\"radio\" name=\"taskFilter\" value=\"all\" />\r\n            <label {...classes(\"label\")} htmlFor=\"all\"> All </label>\r\n\r\n            <input {...classes(\"input\")} id=\"completed\" type=\"radio\" name=\"taskFilter\" value=\"completed\" />\r\n            <label {...classes(\"label\")} htmlFor=\"completed\"> Completed </label>\r\n\r\n            <input {...classes(\"input\")} id=\"uncompleted\" type=\"radio\" name=\"taskFilter\" value=\"uncompleted\" />\r\n            <label {...classes(\"label\")} htmlFor=\"uncompleted\"> Uncompleted </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksFilter","export const setFilterStatus = (status) => {\r\n    return {\r\n        type: \"SET_FILTER_STATUS\",\r\n        payload: status\r\n    }\r\n}","import axios from \"axios\"\r\n\r\nexport const startFetching = () => {\r\n    return {\r\n        type: \"START_FETCHING\",\r\n    }\r\n}\r\n\r\nexport const getTasks = () => {\r\n    return (dispatch) => {\r\n        axios.get(\"/todos\")\r\n            .then(response => {\r\n                dispatch({\r\n                    type: \"GET_TASKS\",\r\n                    payload: response.data\r\n                })\r\n            })\r\n            .catch(err => alert(err))\r\n    }\r\n}\r\n\r\nexport const createTask = (description) => {\r\n    return (dispatch, getState) => {\r\n        const { tasks: { tasks } } = getState()\r\n        const body = { text: description }\r\n        axios.post(\"/todos/\", body)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: \"CREATE_TASK\",\r\n                    payload: [\r\n                        ...tasks,\r\n                        response.data\r\n                    ]\r\n                })\r\n            })\r\n            .catch(err => alert(err))\r\n    }\r\n}\r\n\r\nexport const updateTask = (description, id) => {\r\n    return (dispatch, getState) => {\r\n        const { tasks: { tasks } } = getState()\r\n        const body = { text: description }\r\n        axios.post(`/todos/${id}`, body)\r\n            .then(({ data }) => {\r\n                const updatedTasks = tasks.map(task => task.id === data.id ? data : task);\r\n                dispatch({\r\n                    type: \"UPDATE_TASK\",\r\n                    payload: updatedTasks\r\n                })\r\n            })\r\n            .catch(err => alert(err))\r\n    }\r\n}\r\n\r\nexport const deleteTask = (id) => {\r\n    return (dispatch, getState) => {\r\n        axios.delete(`/todos/${id}`).catch(err => alert(err));\r\n        const { tasks: { tasks } } = getState()\r\n        const updatedTasks = tasks.filter(task => task.id !== id)\r\n        dispatch({\r\n            type: \"DELETE_TASK\",\r\n            payload: updatedTasks\r\n        })\r\n    }\r\n}\r\n\r\nexport const changeTaskStatus = (id) => {\r\n    return (dispatch, getState) => {\r\n        const { tasks: { tasks } } = getState()\r\n        const targetTaskIndex = tasks.findIndex(task => task.id === id)\r\n        const statusUrl = tasks[targetTaskIndex].completed ? `/todos/${id}/incomplete` : `/todos/${id}/complete`\r\n        axios.post(statusUrl).catch(err => alert(err))\r\n        const updatedTasks = tasks.map(task => task.id === id ? {...task, completed: !task.completed } : task)\r\n        dispatch({\r\n            type: \"CHANGE_TASK_STATUS\",\r\n            payload: updatedTasks\r\n        })\r\n    }\r\n}","import React, {useState} from \"react\"\r\nimport BEMHelper from \"react-bem-helper\"\r\nimport {useDispatch} from \"react-redux\"\r\n\r\nimport {createTask, startFetching} from \"../actions/tasks\"\r\nimport \"./NewTask.scss\"\r\n\r\nvar classes = new BEMHelper({\r\n    name: 'new-task'\r\n})\r\n\r\nconst NewTask = () => {\r\n    const dispatch = useDispatch()\r\n    const [newTaskName, setNewTaskName] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setNewTaskName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form \r\n            {...classes()}\r\n            onSubmit={e => {\r\n                e.preventDefault()\r\n                dispatch(startFetching())\r\n                dispatch(createTask(newTaskName))\r\n                setNewTaskName(\"\")\r\n             }}>\r\n\r\n            <input \r\n                 {...classes(\"input\")}\r\n                name=\"newTaskName\" \r\n                value={newTaskName} \r\n                onChange={handleChange}/>\r\n\r\n            <button \r\n                {...classes(\"button\")}\r\n                name=\"add-task\">\r\n                <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewTask","import React from \"react\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport BEMHelper from \"react-bem-helper\"\r\n\r\nimport {changeTaskStatus, deleteTask} from \"../actions/tasks\"\r\nimport \"./TasksActions.scss\"\r\n\r\nvar classes = new BEMHelper({\r\n    name: \"actions\"\r\n})\r\n\r\nconst TasksActions = () => {\r\n    const { filterStatus, tasks: {tasks} } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    \r\n    const completeVisible = () => {\r\n        if (filterStatus !== \"completed\") {\r\n            tasks.forEach( task => !task.completed ? dispatch(changeTaskStatus(task.id)) : \"\" )\r\n        }\r\n    }\r\n\r\n    const removeCompleted = () => {\r\n        tasks.forEach(task => task.completed ? dispatch(deleteTask(task.id)) : \"\")\r\n    }\r\n\r\n    const completedCount = tasks.filter(task => task.completed === true).length;\r\n\r\n    return (\r\n        <div {...classes()}>\r\n            <p {...classes(\"count\")} >{completedCount}</p>\r\n\r\n            {\r\n            completedCount > 0 ? \r\n            <button \r\n                {...classes(\"remove-completed\")} \r\n                onClick={removeCompleted}> \r\n                Remove completed \r\n            </button> : \"\"\r\n            }\r\n\r\n            <button \r\n                {...classes(\"complete-all\")}\r\n                onClick={completeVisible}> \r\n                Complete all \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksActions","import React, {useState} from \"react\"\r\nimport BEMHelper from \"react-bem-helper\"\r\nimport {useDispatch} from \"react-redux\"\r\n\r\nimport {updateTask, deleteTask, changeTaskStatus} from \"../actions/tasks\"\r\nimport \"./Task.scss\"\r\n\r\nvar classes = new BEMHelper({\r\n    name: 'task'\r\n})\r\n\r\nconst Task = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { taskInfo: {id, text, completed} } = props\r\n\r\n    const [isEditable, setEditable] = useState(false)\r\n    const [newText, setNewText] = useState(text)\r\n\r\n    const handleKeyDown = e => {\r\n        const {key} = e\r\n\r\n        const removeFocus = () => {\r\n            setEditable(false)\r\n            e.target.blur();\r\n            e.target.classList.remove(\"task__description--clicked\");\r\n        }\r\n\r\n        if (key === \"Enter\") {\r\n            dispatch(updateTask(newText, id))\r\n            removeFocus()\r\n        }\r\n\r\n        if (key === \"Escape\"){\r\n            setNewText(text)\r\n            removeFocus()\r\n        }\r\n\r\n    }\r\n\r\n    const handleDoubleClick = e => {\r\n        setEditable(true)\r\n        e.target.classList.add(\"task__description--clicked\");\r\n        e.target.setSelectionRange(e.target.value.length, e.target.value.length);\r\n    }\r\n\r\n    return (\r\n        <form \r\n            onSubmit={e => e.preventDefault()}\r\n            {...classes()} >\r\n\r\n            <label className=\"b-contain\">\r\n\r\n            <input \r\n                {...classes(\"status\")}\r\n                type=\"checkbox\" \r\n                name=\"complete\" \r\n                value={completed} \r\n                checked={completed} \r\n                onChange={() => dispatch(changeTaskStatus(id))} />\r\n                <div className=\"b-input\"></div>\r\n            </label>\r\n\r\n            <input \r\n                {...classes('id')}\r\n                type=\"text\" \r\n                name=\"id\" \r\n                value={id} \r\n                hidden \r\n                readOnly />\r\n\r\n            <input \r\n                {...classes('description')}\r\n                type=\"text\" \r\n                name=\"description\" \r\n                value={newText} \r\n                onDoubleClick={handleDoubleClick}\r\n                onInput={ e => isEditable ? setNewText( e.target.value) : \"\"}\r\n                onKeyDown={handleKeyDown}\r\n                />\r\n\r\n            <button \r\n                type=\"button\"\r\n                name=\"remove-task\"\r\n                onClick={() => dispatch(deleteTask(id))} {...classes(\"remove\")}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Task","import React, {useEffect} from \"react\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\n\r\nimport {getTasks} from \"../actions/tasks\"\r\nimport Task from \"./Task\"\r\nimport \"./TasksList.scss\"\r\n\r\nconst TasksList = () => {\r\n    const {filterStatus, tasks: {isLoading, tasks}} = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getTasks())\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    const displayTasks = () => { \r\n        if (filterStatus === \"completed\"){\r\n            return tasks.reduce( (result, data) => data.completed ? result.concat(<Task key={data.id} taskInfo={data} />) : result, [] )\r\n        }\r\n\r\n        if (filterStatus === \"uncompleted\") {\r\n            return tasks.reduce( (result, data) => !data.completed ? result.concat(<Task key={data.id} taskInfo={data} />) : result, []  )\r\n        }    \r\n\r\n        return tasks.map(data => <Task key={data.id} taskInfo={data} /> )\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {isLoading ? <div className=\"loader\">Loading...</div> : displayTasks()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksList","import React from \"react\"\r\n\r\nimport TasksFilter from \"../components/TasksFilter\"\r\nimport NewTask from \"../components/NewTask\"\r\nimport TasksActions from \"../components/TasksActions\"\r\nimport TasksList from \"../components/TasksList\"\r\nimport \"./App.scss\"\r\n\r\nconst App = () => {\r\n    return (\r\n        <main className=\"toDoList\">\r\n            <h1 className=\"toDoList__title\">\r\n                To Do List\r\n            </h1>\r\n            <NewTask />\r\n            <TasksList />\r\n            <TasksActions />\r\n            <TasksFilter />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport {Provider} from \"react-redux\"\r\n\r\nimport store from \"./reducers\"\r\nimport App from \"./containers/App\"\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, \r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}